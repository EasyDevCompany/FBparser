version: '3.3'

volumes:
  postgres_data:
  json_data:

services:
  db:
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - '8001:8001'
    depends_on:
      redis:
        condition: service_healthy

  rabbit:
      restart: always
      image: "rabbitmq:3-management"
      env_file:
        - ./.env
      ports:
        - "5672:5672"
        - "15672:15672"
      healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 30s
        timeout: 30s
        retries: 3
  
  bot:
    build:
      context: ./src/
      dockerfile: Bot.Dockerfile
    restart: always
    volumes:
      - "json_data:/code/svc/handlers:rw"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./.env
  
  beat:
    build:
      context: ./src/
      dockerfile: Beat.Dockerfile
    restart: always
    volumes:
      - "json_data:/code/svc/handlers:ro"
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    env_file:
      - ./.env

  worker:
    build:
      context: ./src/
      dockerfile: Worker.Dockerfile
    restart: always
    volumes:
      - "json_data:/code/svc/handlers:ro"
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    env_file:
      - ./.env
